//https://leetcode.com/problems/binary-tree-right-side-view/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> res=new ArrayList<Integer>();
        Queue<TreeNode> q=new LinkedList<TreeNode>();

        if(root == null){ return res;}
        q.add(root);

         while(!q.isEmpty()) {
            int size = q.size();
            int last = -101;

            for(int i = 0; i<size; i++) {
                TreeNode front = q.remove();

                if(front.left != null) q.add(front.left);
                if(front.right != null) q.add(front.right);

                last = front.val;
            }

            res.add(last);
        }

        return res;
        
    }
    
}
