//https://leetcode.com/problems/symmetric-tree/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        
        return isSymmetricHelper(root,root);
    }

    public boolean isSymmetricHelper(TreeNode lroot,TreeNode rroot)
    {
        if(lroot==null||rroot==null){
            return lroot==rroot;
        }
        if( isSymmetricHelper(lroot.left,rroot.right) && isSymmetricHelper(lroot.right,rroot.left)){
            return lroot.val==rroot.val ;
        }
        return false;
    }    
}
