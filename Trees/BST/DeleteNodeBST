//https://leetcode.com/problems/delete-node-in-a-bst/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode deleteNode(TreeNode root, int key) {
        if(root==null)return null;

        if(root.val>key){
            root.left=deleteNode(root.left,key);
        }else if(root.val<key){
            root.right=deleteNode(root.right,key);
        }else{
            if(root.left==null){
                return root.right;
            }
            else if(root.right==null){
                return root.left;
            }else{
                /** 
                TreeNode successor=root.right;
                while(successor!=null && successor.left!=null){
                    successor=successor.left;
                }
                root.val=successor.val;
                root.right=deleteNode(root.right,successor.val);
                **/
                TreeNode pred=root.left;
                while(pred!=null && pred.right!=null){
                    pred=pred.right;
                }
                root.val=pred.val;
                root.left=deleteNode(root.left,pred.val);
            }
        }
        return root;
    }
}
